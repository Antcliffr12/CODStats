{"ast":null,"code":"var _jsxFileName = \"/Users/antclir/Projects/Reactjs/cod/client/src/Components/Dropdown/dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './dropdown.scss';\nimport onClickOutside from 'react-onclickoutside';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dropdown({\n  title,\n  items = [],\n  multiSelect = false\n}) {\n  _s();\n\n  const [platform, setPlatform] = useState('');\n\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  const handleDropdownChange = item => {\n    setPlatform(item);\n    console.log(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dd-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        tabIndex: 0,\n        className: \"dd-header\",\n        role: \"button\",\n        onKeyPress: () => toggle(!open),\n        onClick: () => toggle(!open),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dd-header_title\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dd-header_title--bold\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dd-header_action\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: open ? 'Close' : 'Open'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), open && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dd-list\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"dd-list-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleOnClick(item),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isItemInSelection(item) && 'Selected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Test: \", selection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dropdown, \"EGZQeD0MpXs3ib3RCBg4gAsxNPo=\");\n\n_c = Dropdown;\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside\n};\nexport default _c2 = onClickOutside(Dropdown, clickOutsideConfig);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dropdown\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/antclir/Projects/Reactjs/cod/client/src/Components/Dropdown/dropdown.js"],"names":["React","useState","onClickOutside","Dropdown","title","items","multiSelect","platform","setPlatform","handleClickOutside","setOpen","handleDropdownChange","item","console","log","toggle","open","map","handleOnClick","value","isItemInSelection","id","selection","clickOutsideConfig"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;;AAGA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAK,GAAG,EAAjB;AAAqBC,EAAAA,WAAW,GAAG;AAAnC,CAAlB,EAA8D;AAAA;;AAC1D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AACAE,EAAAA,QAAQ,CAACM,kBAAT,GAA8B,MAAMC,OAAO,CAAC,KAAD,CAA3C;;AAEA,QAAMC,oBAAoB,GAAIC,IAAD,IAAU;AACnCJ,IAAAA,WAAW,CAACI,IAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAHD;;AAKA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AACI,QAAA,QAAQ,EAAE,CADd;AAEI,QAAA,SAAS,EAAC,WAFd;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,UAAU,EAAE,MAAMG,MAAM,CAAC,CAACC,IAAF,CAJ5B;AAKI,QAAA,OAAO,EAAE,MAAMD,MAAM,CAAC,CAACC,IAAF,CALzB;AAAA,gCAOI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC,uBAAb;AAAA,sBAAsCZ;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAA,sBAAIY,IAAI,GAAG,OAAH,GAAa;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAeKA,IAAI,iBACD;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,kBACKX,KAAK,CAACY,GAAN,CAAUL,IAAI,iBACX;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAMM,aAAa,CAACN,IAAD,CAAlD;AAAA,oCACI;AAAA,wBAAOA,IAAI,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAOC,iBAAiB,CAACR,IAAD,CAAjB,IAA2B;AAAlC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAkCA,IAAI,CAACS,EAAvC;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAhBR;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eA6BQ;AAAA,2BAAWC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BR;AAAA,kBADJ;AAkCH;;GA3CQnB,Q;;KAAAA,Q;AA4CT,MAAMoB,kBAAkB,GAAG;AACvBd,EAAAA,kBAAkB,EAAE,MAAMN,QAAQ,CAACM;AADZ,CAA3B;AAIA,qBAAeP,cAAc,CAACC,QAAD,EAAWoB,kBAAX,CAA7B","sourcesContent":["import React, { useState } from 'react'\nimport './dropdown.scss';\nimport onClickOutside from 'react-onclickoutside';\n\n\nfunction Dropdown({ title, items = [], multiSelect = false }) {\n    const [platform, setPlatform] = useState('');\n    Dropdown.handleClickOutside = () => setOpen(false);\n\n    const handleDropdownChange = (item) => {\n        setPlatform(item);\n        console.log(item);\n    }\n    \n    return (\n        <>\n        <div className=\"dd-wrapper\">\n            <div\n                tabIndex={0}\n                className=\"dd-header\"\n                role=\"button\"\n                onKeyPress={() => toggle(!open)}\n                onClick={() => toggle(!open)}\n            >\n                <div className=\"dd-header_title\">\n                    <p className=\"dd-header_title--bold\">{title}</p>\n                </div>\n                <div className=\"dd-header_action\">\n                    <p>{open ? 'Close' : 'Open'}</p>\n                </div>\n            </div>\n            {open && (\n                <ul className=\"dd-list\">\n                    {items.map(item => (\n                        <li className=\"dd-list-item\" key={item.id}>\n                            <button type=\"button\" onClick={() => handleOnClick(item)}>\n                                <span>{item.value}</span>\n                                <span>{isItemInSelection(item) && 'Selected'}</span>\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n                <h1>Test: {selection }</h1>\n\n    </>\n    )\n}\nconst clickOutsideConfig = {\n    handleClickOutside: () => Dropdown.handleClickOutside,\n};\n\nexport default onClickOutside(Dropdown, clickOutsideConfig)\n"]},"metadata":{},"sourceType":"module"}